% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_analysis.R
\name{cross_validation}
\alias{cross_validation}
\title{Leave-future-out cross-validation}
\usage{
cross_validation(
  model,
  k = 10,
  loss_function = "derivative matching",
  optimizer = "ADAM",
  regularization_weight = 0,
  verbose = TRUE,
  loss_options = list(),
  optim_options = list(),
  path = "Null"
)
}
\arguments{
\item{model}{The UDE model to be tested with cross-validation.}

\item{k}{The number of folds for cross-validation. The default is 10 and the
recommended minimum number is 3.}

\item{loss_function}{Missing description in Julia}

\item{optimizer}{Missing description in Julia}

\item{regularization_weight}{Missing description in Julia}

\item{verbose}{Missing description in Julia}

\item{loss_options}{Missing description in Julia}

\item{optim_options}{Missing description in Julia}

\item{path}{File path for saving .csv files containing the raw testing data
and forecasts for each fold.}
}
\value{
Several data frames.
}
\description{
\code{cross_validation()} runs leave-future-out cross-validation on the UDE model
using a training routine with \strong{k}-folds. The function returns three data
frames. The first contains an estimate of the mean absolute error of the
forecasts and associated standard error as a function of the forecast horizon
(1 to \strong{k} time steps into the future). The second and third are returned in a
named tuple with two elements \code{horizon_by_var} and \code{raw}. The data frame
\code{horizon_by_var} contains the forecasting errors separated by variable
and the data frame \code{raw} contains the raw testing and forecasting data. If
the model is trained on multiple time series, the named tuple will include a
third data frame \code{horizon_by_var_by_series}.
}
\examples{
print(x)

}
